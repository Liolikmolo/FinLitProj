// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id String @default(uuid()) @id
  username String
  email String @unique
  password String
  usertype String
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  host Quiz[]
  accounts Account[]
  sessions Session[]
  @@map(name: "users")
}

model Account {
  id String @default(uuid()) @id
  userId String @map("user_id")
  type String
  provider String
  providerAccountId String @map("provider_account_id")
  refresh_token String?
  access_token String?
  expires_at Int?
  token_type String?
  scope String?
  id_token String?
  session_state String?
  oauth_token_secret String?
  oauth_token String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id String @id @default(uuid())
  sessionToken String @unique @map("session_token")
  userId String @map("user_id")
  expires DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade) 
}

model VerificationToken {
  id Int @id @default(autoincrement())
  identifier String
  token String @unique
  expires DateTime
  @@unique([identifier, token])
}

model Quiz {
  id String @default(uuid()) @id
  title String @unique
  score Int
  userHost User? @relation(fields: [hostId], references: [id])
  hostId String
  startedAt DateTime @default(now()) @map(name: "started_at")
  finishedAt DateTime
  questions Question[]
}

model Question {
  id String @default(uuid()) @id
  quizId String
  quizHost Quiz? @relation(fields: [quizId], references: [id])
  content String @unique
  answers Answer[]
}

model Answer {
  id String @default(uuid()) @id
  correct Boolean
  content String
  questionId String
  questionHost Question? @relation(fields: [questionId], references: [id])
}